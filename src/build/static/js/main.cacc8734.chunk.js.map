{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","pages/article-content.js","pages/ArticleListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","AboutPage","ArticlesList","articles","map","article","index","className","to","name","title","content","substring","ArticleListPage","articleContent","CommentsList","comments","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","onAddUpvote","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","cols","rows","NotFoundPage","ArticlePage","match","params","find","art","articleInfo","useEffect","fetchData","otherArticles","filter","paragraph","Navbar","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cacc8734.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => {\n  return (\n    <>\n      <h1>Hello, welcome to my blog!</h1>\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ipsum,\n        dignissimos ut. Hic impedit vero quae iste corporis! Consequuntur nulla,\n        pariatur facilis qui exercitationem a harum aperiam, laboriosam\n        similique suscipit distinctio.\n      </p>\n      <p>\n        It is a long established fact that a reader will be distracted by the\n        readable content of a page when looking at its layout. The point of\n        using Lorem Ipsum is that it has a more-or-less normal distribution of\n        letters, as opposed to using 'Content here, content here', making it\n        look like readable English. Many desktop publishing packages and web\n        page editors now use Lorem Ipsum as their default model text, and a\n        search for 'lorem ipsum' will uncover many web sites still in their\n        infancy. Various versions have evolved over the years, sometimes by\n        accident, sometimes on purpose (injected humour and the like).\n      </p>\n      <p>\n        There are many variations of passages of Lorem Ipsum available, but the\n        majority have suffered alteration in some form, by injected humour, or\n        randomised words which don't look even slightly believable. If you are\n        going to use a passage of Lorem Ipsum, you need to be sure there isn't\n        anything embarrassing hidden in the middle of text. All the Lorem Ipsum\n        generators on the Internet tend to repeat predefined chunks as\n        necessary, making this the first true generator on the Internet. It uses\n        a dictionary of over 200 Latin words, combined with a handful of model\n        sentence structures, to generate Lorem Ipsum which looks reasonable. The\n        generated Lorem Ipsum is therefore always free from repetition, injected\n        humour, or non-characteristic words etc.\n      </p>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst AboutPage = () => {\n  return (\n    <>\n      <h3>About mee goreng üçú</h3>\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ipsum,\n        dignissimos ut. Hic impedit vero quae iste corporis! Consequuntur nulla,\n        pariatur facilis qui exercitationem a harum aperiam, laboriosam\n        similique suscipit distinctio.\n      </p>\n      <p>\n        It is a long established fact that a reader will be distracted by the\n        readable content of a page when looking at its layout. The point of\n        using Lorem Ipsum is that it has a more-or-less normal distribution of\n        letters, as opposed to using 'Content here, content here', making it\n        look like readable English. Many desktop publishing packages and web\n        page editors now use Lorem Ipsum as their default model text, and a\n        search for 'lorem ipsum' will uncover many web sites still in their\n        infancy. Various versions have evolved over the years, sometimes by\n        accident, sometimes on purpose (injected humour and the like).\n      </p>\n      <p>\n        There are many variations of passages of Lorem Ipsum available, but the\n        majority have suffered alteration in some form, by injected humour, or\n        randomised words which don't look even slightly believable. If you are\n        going to use a passage of Lorem Ipsum, you need to be sure there isn't\n        anything embarrassing hidden in the middle of text. All the Lorem Ipsum\n        generators on the Internet tend to repeat predefined chunks as\n        necessary, making this the first true generator on the Internet. It uses\n        a dictionary of over 200 Latin words, combined with a handful of model\n        sentence structures, to generate Lorem Ipsum which looks reasonable. The\n        generated Lorem Ipsum is therefore always free from repetition, injected\n        humour, or non-characteristic words etc.\n      </p>\n    </>\n  );\n};\n\nexport default AboutPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nconst ArticlesList = ({ articles }) => {\n  return (\n    <>\n      {articles.map((article, index) => (\n        <Link\n          className='article-list-item'\n          key={index}\n          to={`/article/${article.name}`}\n        >\n          <h3>{article.title}</h3>\n          <p>{article.content[0].substring(0, 180)}...</p>\n        </Link>\n      ))}\n    </>\n  );\n};\n\nexport default ArticlesList;\n","const articles = [\n  {\n    name: 'learn-react',\n    title: 'The Fastest Way to Learn React',\n    content: [\n      `Welcome! Today we're going to be talking about the fastest way to\n          learn React. We'll be discussing some topics such as proin congue\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n          sodales purus euismod.`,\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n    ],\n  },\n  {\n    name: 'learn-node',\n    title: 'How to Build a Node Server in 10 Minutes',\n    content: [\n      `In this article, we're going to be talking looking at a very quick way\n          to set up a Node.js server. We'll be discussing some topics such as proin congue\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n          sodales purus euismod.`,\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n    ],\n  },\n  {\n    name: 'my-thoughts-on-resumes',\n    title: 'My Thoughts on Resumes',\n    content: [\n      `Today is the day I talk about something which scares most people: resumes.\n          In reality, I'm not sure why people have such a hard time with proin congue\n          ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \n          Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \n          non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \n          eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \n          sodales purus euismod.`,\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \n          Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \n          nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \n          sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \n          interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \n          consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n    ],\n  },\n];\n\nexport default articles;\n","import React from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport articleContent from './article-content';\n\nconst ArticleListPage = () => {\n  return (\n    <>\n      <h1>Articles</h1>\n      <ArticlesList articles={articleContent} />\n    </>\n  );\n};\n\nexport default ArticleListPage;\n","import React from 'react';\n\nconst CommentsList = ({ comments }) => {\n  return (\n    <>\n      <h3>Comments</h3>\n      {comments ? (\n        comments.map((comment, index) => (\n          <div className='comment' key={index}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n          </div>\n        ))\n      ) : (\n        <code>No comments available</code>\n      )}\n    </>\n  );\n};\n\nexport default CommentsList;\n","import React from 'react';\n\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\n  const onAddUpvote = async () => {\n    const result = await fetch(`/api/articles/${articleName}/upvote`, {\n      method: 'POST',\n    });\n    const body = await result.json();\n    setArticleInfo(body);\n  };\n\n  return (\n    <div id='upvotes-section'>\n      <button onClick={() => onAddUpvote()}>Add upvote</button>\n      <code>This post has been upvoted {upvotes} times</code>\n    </div>\n  );\n};\n\nexport default UpvotesSection;\n","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\n  const [username, setUsername] = useState('');\n  const [commentText, setCommentText] = useState('');\n\n  const addComment = async () => {\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\n      method: 'POST',\n      body: JSON.stringify({ username, text: commentText }),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const body = await result.json();\n    setArticleInfo(body);\n    setUsername('');\n    setCommentText('');\n  };\n\n  return (\n    <div id='add-comment-form'>\n      <h3>Add a comment</h3>\n      <label>\n        Name:\n        <input\n          type='text'\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n      </label>\n      <label>\n        Comment:\n        <textarea\n          cols='50'\n          rows='4'\n          value={commentText}\n          onChange={(event) => setCommentText(event.target.value)}\n        />\n      </label>\n      <button onClick={() => addComment()}>Add comment</button>\n    </div>\n  );\n};\n\nexport default AddCommentForm;\n","import React from 'react';\n\nconst NotFoundPage = () => {\n  return <h1>Page Not Found! üòø</h1>;\n};\n\nexport default NotFoundPage;\n","import React, { useState, useEffect } from 'react';\nimport ArticlesList from '../components/ArticlesList';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvotesSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport articleContent from './article-content';\nimport NotFoundPage from './NotFoundPage';\n\nconst ArticlePage = ({ match }) => {\n  const name = match.params.name;\n  const article = articleContent.find((art) => art.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n  useEffect(() => {\n    const fetchData = async () => {\n      // proxy http://localhost:8000/ defined in package.json, for DEVELOPMENT only\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      setArticleInfo(body);\n    };\n    fetchData();\n  }, [name]);\n\n  if (!article) return <NotFoundPage />;\n\n  const otherArticles = articleContent.filter((art) => art.name !== name);\n\n  return (\n    <>\n      <h1>{article.title}</h1>\n      <UpvotesSection\n        articleName={name}\n        upvotes={articleInfo.upvotes}\n        setArticleInfo={setArticleInfo}\n      />\n      {article.content.map((paragraph, index) => (\n        <p key={index}>{paragraph}</p>\n      ))}\n      <CommentsList comments={articleInfo.comments} />\n      <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\n      <h3>Other articles: </h3>\n      <ArticlesList articles={otherArticles} />\n    </>\n  );\n};\n\nexport default ArticlePage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to='/'>Home</Link>\n          <Link to='/about'>About</Link>\n          <Link to='/articles-list'>Articles</Link>\n        </li>\n        <li></li>\n        <li></li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticleListPage from './pages/ArticleListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport Navbar from './components/Navbar';\nimport NotFoundPage from './pages/NotFoundPage';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div id='page-body'>\n          <Switch>\n            <Route path='/' component={HomePage} exact />\n            <Route path='/about' component={AboutPage} />\n            <Route path='/articles-list' component={ArticleListPage} />\n            <Route path='/article/:name' component={ArticlePage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}